(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[6],{Rsk4:function(n,e,t){"use strict";t.r(e);var o=t("9og8"),r=t("WmNS"),s=t.n(r),a=t("LtsZ"),i="import React from 'react'\nimport { createStore, Models } from 'dobux'\nimport * as models from './model'\n\nimport './index.less'\n\nexport type RootModel = Models<typeof models>\n\n// \u521b\u5efa store \u5b9e\u4f8b\nconst { withProvider, useModel } = createStore(models)\n\nconst Counter: React.FC = () => {\n  const { state, reducers, effects } = useModel('counter')\n\n  const handleIncrease = () => {\n    reducers.increase()\n  }\n\n  const handleDecrease = () => {\n    reducers.decrease()\n  }\n\n  const handleSetValue = () => {\n    reducers.setValue('count', state.count + 2)\n  }\n\n  const handleSetValues = () => {    \n    reducers.setValues({\n      count: state.count - 2\n    })\n  }\n\n  const handleReset = () => {\n    reducers.reset()\n  }\n\n  const handleAsync = () => {\n    effects.increaseAsync()\n  }\n\n  if (effects.increaseAsync.loading) {\n    return <p className=\"loading\">loading ...</p>\n  }\n\n  return (\n    <div className=\"counter\">\n      <p>The count is: {state.count}</p>\n      <button onClick={handleIncrease}>+</button>\n      <button onClick={handleDecrease}>-</button>\n      <button onClick={handleSetValue}>setValue</button>\n      <button onClick={handleSetValues}>setValues</button>\n      <button onClick={handleAsync}>async</button>\n      <button onClick={handleReset}>reset</button>\n    </div>\n  )\n}\n\nexport default withProvider(Counter)",d="import { createModel } from 'dobux'\nimport { RootModel } from './index'\n\nfunction wait(ms: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n\nexport const counter = createModel<RootModel, 'counter'>()({\n  state: {\n    count: 0,\n  },\n  reducers: {\n    increase(state) {\n      state.count += 1\n    },\n    decrease(state) {\n      state.count -= 1\n    },\n  },\n  effects: (model, rootModel) => ({\n    async increaseAsync() {\n      await wait(1000)\n      model.reducers.increase()\n    },\n  }),\n})",c=".counter {\n  p {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 30px;\n  }\n\n  button {\n    min-width: 42px;\n    outline: none;\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n    display: inline-block;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 14px;\n    line-height: 1.499;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    border: 1px solid transparent;\n    -webkit-box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    cursor: pointer;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-color: #d9d9d9;\n  }\n\n  button + button {\n    margin-left: 10px;\n  }\n}\n\n.loading {\n  display: flex;\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10001;\n}",l="import React from 'react'\nimport { store } from './store'\n\nimport './index.less'\n\nconst { withProvider, useModel } = store\n\nconst Counter: React.FC = () => {\n  const { state, reducers, effects } = useModel('counter')\n\n  const handleIncrease = () => {\n    reducers.increase()\n  }\n\n  const handleDecrease = () => {\n    reducers.decrease()\n  }\n\n  const handleSetValue = () => {\n    reducers.setValue('count', state.count + 2)\n  }\n\n  const handleSetValues = () => {    \n    reducers.setValues({\n      count: state.count - 2\n    })\n  }\n\n  const handleReset = () => {\n    reducers.reset()\n  }\n\n  const handleAsync = () => {\n    effects.increaseAsync()\n  }\n\n  if (effects.increaseAsync.loading) {\n    return <p className=\"loading\">loading ...</p>\n  }\n\n  return (\n    <div className=\"counter\">\n      <p>The count is: {state.count}</p>\n      <button onClick={handleIncrease}>+</button>\n      <button onClick={handleDecrease}>-</button>\n      <button onClick={handleSetValue}>setValue</button>\n      <button onClick={handleSetValues}>setValues</button>\n      <button onClick={handleAsync}>async</button>\n      <button onClick={handleReset}>reset</button>\n    </div>\n  )\n}\n\nexport default withProvider(Counter)",u="import { createStore, Models } from 'dobux'\nimport * as models from './model'\n\nexport type RootModel = Models<typeof models>\n\n// \u521b\u5efa store \u5b9e\u4f8b\nexport const store = createStore(models)",m="import { createModel } from 'dobux'\nimport { RootModel } from './store'\n\nfunction wait(ms: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n\nexport const counter = createModel<RootModel, 'counter'>()({\n  state: {\n    count: 0,\n  },\n  reducers: {\n    increase(state) {\n      state.count += 1\n    },\n    decrease(state) {\n      state.count -= 1\n    },\n  },\n  effects: (model, rootModel) => ({\n    async increaseAsync() {\n      await wait(1000)\n      model.reducers.increase()\n    },\n  }),\n})",p=".counter {\n  p {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 30px;\n  }\n\n  button {\n    min-width: 42px;\n    outline: none;\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n    display: inline-block;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 14px;\n    line-height: 1.499;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    border: 1px solid transparent;\n    -webkit-box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    cursor: pointer;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-color: #d9d9d9;\n  }\n\n  button + button {\n    margin-left: 10px;\n  }\n}\n\n.loading {\n  display: flex;\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10001;\n}",x="import React from 'react'\nimport Header from './Header'\nimport UndoList from './UndoList'\nimport { store } from './store'\n\nimport './index.less'\n\nconst { Provider } = store\n\nconst TodoList: React.FC = () => {\n  return (\n    <Provider>\n      <div className=\"todo-list\">\n        <Header />\n        <UndoList />\n      </div>\n    </Provider>\n  )\n}\n\nexport default TodoList",f="import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport { store } from '../store'\n\nfunction Header() {\n  const { state, reducers, effects } = store.useModel('header')\n\n  const handleChange = (e: ChangeEvent<{ value: string }>) => {\n    reducers.changeValue(e.target.value)\n  }\n\n  const handleKeyUp = (e: KeyboardEvent) => {\n    if (state.value && e.keyCode === 13) {\n      effects.addUndoItem()\n      reducers.changeValue('')\n    }\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"content\">\n        TodoList\n        <input\n          onChange={handleChange}\n          onKeyUp={handleKeyUp}\n          value={state.value}\n          placeholder=\"Todo\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Header",h="import { createStore, Models } from 'dobux'\nimport * as models from './models'\n\nexport type RootModel = Models<typeof models>\n\nexport const store = createStore(models)",b="export { header } from './Header/model'\nexport { undoList } from './UndoList/model'",g="import { createModel } from 'dobux'\nimport { RootModel } from '../store'\n\nexport const header = createModel<RootModel, 'header'>()({\n  state: {\n    value: '',\n  },\n  reducers: {\n    changeValue(state, payload: string) {\n      state.value = payload\n    },\n  },\n  effects: (model, rootModel) => ({\n    addUndoItem() {\n      rootModel.undoList.reducers.addItem({\n        content: model.state.value,\n      })\n    },\n  }),\n})",v="import { createModel } from 'dobux'\nimport { RootModel } from '../store'\n\nfunction fetchList(): Promise<{ data: any[] }> {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        data: [\n          {\n            content: 'Learn dobux',\n          },\n          {\n            content: 'Learn typescript',\n          },\n        ],\n      })\n    }, 1000)\n  })\n}\n\ninterface Item {\n  done?: boolean\n  content: string\n}\n\nexport const undoList = createModel<RootModel, 'undoList'>()({\n  state: {\n    items: [\n      {\n        content: 'Learn dobux',\n      },\n      {\n        content: 'Learn typescript',\n      },\n    ] as Item[],\n  },\n  reducers: {\n    addItem(state, item: Item) {\n      state.items.push(item)\n    },\n\n    deleteItem(state, index: number) {\n      state.items.splice(index, 1)\n    },\n\n    toggleItem(state, index: number) {\n      state.items[index].done = !state.items[index].done\n    },\n  },\n  effects: (model) => ({\n    async fetchUndoList() {\n      const result = await fetchList()\n      model.reducers.setValue('items', result.data as any)\n    },\n  }),\n})",w='import React from \'react\'\nimport { store } from \'../store\'\n\nfunction UndoList() {\n  const { state, reducers, effects } = store.useModel(\'undoList\')\n\n  const handleClick = (index: number) => {\n    reducers.deleteItem(index)\n  }\n\n  const handleToggle = (index: number) => {\n    reducers.toggleItem(index)\n  }\n\n  if (effects.fetchUndoList.loading) {\n    return <div className="loading">loading ...</div>\n  }\n\n  return (\n    <div className="undo-list">\n      <h2 className="title">\n        \u6b63\u5728\u8fdb\u884c <div className="count">{state.items.filter((item: any) => !item.done).length}</div>\n      </h2>\n      <ul className="content">\n        {state.items.map((item: any, index: number) => {\n          return (\n            !item.done && (\n              <li onClick={() => handleToggle(index)} className="item" key={index}>\n                {item.content}\n                <div\n                  onClick={e => {\n                    e.stopPropagation()\n                    handleClick(index)\n                  }}\n                  className="delete"\n                >\n                  -\n                </div>\n              </li>\n            )\n          )\n        })}\n      </ul>\n      <h2 className="title" style={{ marginTop: 30 }}>\n        \u5df2\u7ecf\u5b8c\u6210{\' \'}\n        <div className="count" data-test="count">\n          {state.items.filter((item: any) => item.done).length}\n        </div>\n      </h2>\n      <ul className="content">\n        {state.items.map((item: any, index: number) => {\n          return (\n            item.done && (\n              <li onClick={() => handleToggle(index)} className="item" key={index}>\n                {item.content}\n                <div\n                  onClick={e => {\n                    e.stopPropagation()\n                    handleClick(index)\n                  }}\n                  className="delete"\n                >\n                  -\n                </div>\n              </li>\n            )\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default UndoList',y=".todo-list {\n  .header {\n    line-height: 60px;\n    background-color: #333;\n  }\n\n  .header .content {\n    width: 600px;\n    margin: 0 auto;\n    font-size: 24px;\n    color: #fff;\n  }\n\n  .header input {\n    width: 60%;\n    float: right;\n    margin-top: 15px;\n    padding: 0 10px;\n    line-height: 24px;\n    border-radius: 5px;\n    outline: none;\n  }\n\n  .undo-list {\n    width: 600px;\n    margin: 0 auto;\n    text-align: left;\n  }\n\n  .undo-list .title {\n    line-height: 30px;\n    margin: 10px 0;\n    font-size: 24px;\n    font-weight: bold;\n  }\n\n  .undo-list .count {\n    float: right;\n    width: 30px;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 50%;\n    text-align: center;\n    font-size: 12px;\n    background-color: #e6e6e6;\n  }\n\n  .undo-list .content {\n    list-style-type: none;\n  }\n\n  .undo-list .content .item {\n    line-height: 32px;\n    font-size: 16px;\n    margin-bottom: 10px;\n    background-color: #fff;\n    border-left: 3px solid #629a9c;\n    text-indent: 10px;\n    border-radius: 3px;\n  }\n\n  .undo-list .content .delete {\n    float: right;\n    width: 20px;\n    height: 20px;\n    line-height: 20px;\n    margin-top: 6px;\n    margin-right: 6px;\n    font-size: 16px;\n    margin-bottom: 10px;\n    background-color: #e6e6e6;\n    text-indent: 0;\n    border-radius: 50%;\n    text-align: center;\n  }\n}",k="import React from 'react'\nimport { createStore, Models } from 'dobux'\nimport * as models from './model'\n\nimport './index.less'\n\nexport type RootModel = Models<typeof models>\n\nexport interface CounterProps {\n  state: RootModel['counter']['state']\n  reducers: RootModel['counter']['reducers']\n  effects: RootModel['counter']['effects']\n}\n\n// \u521b\u5efa store \u5b9e\u4f8b\nconst { withProvider, withModel } = createStore(models)\n\nclass Counter extends React.Component<CounterProps> {\n  handleIncrease = () => {\n    const { reducers } = this.props\n    reducers.increase()\n  }\n\n  handleDecrease = () => {\n    const { reducers } = this.props\n    reducers.decrease()\n  }\n\n  handleSetValue = () => {\n    const { state ,reducers } = this.props\n    reducers.setValue('count', state.count + 2)\n  }\n\n  handleSetValues = () => {\n    const { state, reducers } = this.props\n    reducers.setValues({\n      count: state.count - 2\n    })\n  }\n\n  handleAsync = () => {\n    const { effects } = this.props\n    effects.increaseAsync()\n  }\n\n  handleReset = () => {\n    const { reducers } = this.props\n    reducers.reset('count')\n  }\n\n  render() {\n    const { state, effects } = this.props\n\n    if (effects.increaseAsync.loading) {\n      return <p className=\"loading\">loading ...</p>\n    }\n\n    return (\n      <div className=\"counter\">\n        <p>The count is: {state.count}</p>\n        <button onClick={this.handleIncrease}>+</button>\n        <button onClick={this.handleDecrease}>-</button>\n        <button onClick={this.handleSetValue}>setValue</button>\n        <button onClick={this.handleSetValues}>setValues</button>\n        <button onClick={this.handleAsync}>async</button>\n        <button onClick={this.handleReset}>reset</button>\n      </div>\n    )\n  }\n}\n\nexport default withProvider(withModel('counter')(Counter))",M="import { createModel } from 'dobux'\nimport { RootModel } from './index'\n\nfunction wait(ms: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n\nexport const counter = createModel<RootModel, 'counter'>()({\n  state: {\n    count: 0,\n  },\n  reducers: {\n    increase(state) {\n      state.count += 1\n    },\n    decrease(state) {\n      state.count -= 1\n    },\n  },\n  effects: (model, rootModel) => ({\n    async increaseAsync() {\n      await wait(1000)\n      model.reducers.increase()\n    },\n  }),\n})",C=".counter {\n  p {\n    font-size: 20px;\n    font-weight: bold;\n    margin-bottom: 30px;\n  }\n\n  button {\n    min-width: 42px;\n    outline: none;\n    color: #fff;\n    background-color: #1890ff;\n    border-color: #1890ff;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n    display: inline-block;\n    padding: 5px 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 14px;\n    line-height: 1.499;\n    display: inline-block;\n    font-weight: 400;\n    white-space: nowrap;\n    text-align: center;\n    border: 1px solid transparent;\n    -webkit-box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    box-shadow: 0 2px 0 rgba(0, 0, 0, 0.015);\n    cursor: pointer;\n    height: 32px;\n    padding: 0 15px;\n    font-size: 14px;\n    border-color: #d9d9d9;\n  }\n\n  button + button {\n    margin-left: 10px;\n  }\n}\n\n.loading {\n  display: flex;\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.3);\n  z-index: 10001;\n}";e["default"]={"counter-hooks":{component:Object(a["dynamic"])({loader:function(){var n=Object(o["a"])(s.a.mark((function n(){return s.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.e(3).then(t.bind(null,"J0rd"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}()}),previewerProps:{sources:{_:{tsx:i},"model.ts":{import:"./model",content:d},"index.less":{import:"./index.less",content:c}},dependencies:{react:{version:"^16.8.3 || ^17"},dobux:{version:"1.0.6"}},identifier:"counter-hooks"}},"counter-hooks2":{component:Object(a["dynamic"])({loader:function(){var n=Object(o["a"])(s.a.mark((function n(){return s.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.e(3).then(t.bind(null,"X+3H"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}()}),previewerProps:{sources:{_:{tsx:l},"store.ts":{import:"./store",content:u},"model.ts":{import:"./model",content:m},"index.less":{import:"./index.less",content:p}},dependencies:{react:{version:"^16.8.3 || ^17"},dobux:{version:"1.0.6"}},identifier:"counter-hooks2"}},"docs-todo-list":{component:Object(a["dynamic"])({loader:function(){var n=Object(o["a"])(s.a.mark((function n(){return s.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.e(3).then(t.bind(null,"ewSp"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}()}),previewerProps:{sources:{_:{tsx:x},"Header/index.tsx":{import:"./Header",content:f},"store.ts":{import:"../store",content:h},"models.ts":{import:"./models",content:b},"Header/model.ts":{import:"./Header/model",content:g},"UndoList/model.ts":{import:"./UndoList/model",content:v},"UndoList/index.tsx":{import:"./UndoList",content:w},"index.less":{import:"./index.less",content:y}},dependencies:{react:{version:"^16.8.3 || ^17"},dobux:{version:"1.0.6"}},identifier:"docs-todo-list"}},"counter-class":{component:Object(a["dynamic"])({loader:function(){var n=Object(o["a"])(s.a.mark((function n(){return s.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,t.e(3).then(t.bind(null,"8ZmH"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}()}),previewerProps:{sources:{_:{tsx:k},"model.ts":{import:"./model",content:M},"index.less":{import:"./index.less",content:C}},dependencies:{react:{version:"^16.8.3 || ^17"},dobux:{version:"1.0.6"}},identifier:"counter-class"}}}},"iBv+":function(n,e,t){"use strict";t.r(e);var o=t("q1tI"),r=t.n(o),s=t("dEAq");t("Rsk4");e["default"]=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement("div",{className:"markdown"},r.a.createElement("h1",{id:"devtools"},r.a.createElement(s["AnchorLink"],{to:"#devtools","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"Devtools"),r.a.createElement("p",null,r.a.createElement("code",null,"Dobux")," \u5728 ",r.a.createElement("strong",null,"\u5f00\u53d1\u73af\u5883")," \u9ed8\u8ba4\u96c6\u6210\u4e86 ",r.a.createElement(s["Link"],{to:"https://github.com/zalmoxisus/redux-devtools-extension"},"redux-devtools-extension"),"\uff0c\u53ef\u4ee5\u501f\u52a9\u6d4f\u89c8\u5668\u63d2\u4ef6\u5b9e\u73b0 ",r.a.createElement("strong",null,"time travel")," \u529f\u80fd\u3002\u6bcf\u4e2a\u901a\u8fc7 ",r.a.createElement(s["AnchorLink"],{to:"/api#createmodelrootmodel-modelnamemodel"},"createModel")," \u751f\u6210\u7684 ",r.a.createElement("code",null,"Model")," \u90fd\u4f1a\u548c ",r.a.createElement("code",null,"redux-devtools")," \u5efa\u7acb\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u63a5\u751f\u6210\u4e00\u4e2a ",r.a.createElement("code",null,"devtools")," \u5b9e\u4f8b\uff0c\u5bf9\u5e94\u7684\u5b9e\u4f8b\u540d\u79f0\u9ed8\u8ba4\u4e3a ",r.a.createElement("code",null,"dobux/number/modelName"),"\uff0c\u4f8b\u5982 ",r.a.createElement("code",null,"dobux/1/counter"),"\uff0c\u5176\u4e2d ",r.a.createElement("code",null,"dobux/1")," \u4e3a\u9ed8\u8ba4\u751f\u6210\u7684 ",r.a.createElement("code",null,"storeName"),"\uff08\u53ef\u4ee5\u901a\u8fc7 ",r.a.createElement(s["AnchorLink"],{to:"/api#store--createstoremodels"},"createStore")," \u521b\u5efa ",r.a.createElement("code",null,"store")," \u7684\u65f6\u5019\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u540d\u79f0\uff09\uff0c",r.a.createElement("code",null,"counter")," \u4e3a ",r.a.createElement("code",null,"modelName"),"\u3002\u6bcf\u4e00\u4e2a\u72b6\u6001\u6539\u53d8\u7684 ",r.a.createElement("code",null,"action")," \u540d\u79f0\u7531 ",r.a.createElement("code",null,"modelName/reducerName")," \u7ec4\u6210\uff0c\u4f8b\u5982 ",r.a.createElement("code",null,"counter/increase")),r.a.createElement("div",{style:{textAlign:"center"}},r.a.createElement("img",{width:"1000px",src:"/dobux/time-travel-counter.gif"})),r.a.createElement("h2",{id:"\u591a-model-travel"},r.a.createElement(s["AnchorLink"],{to:"#\u591a-model-travel","aria-hidden":"true",tabIndex:-1},r.a.createElement("span",{className:"icon icon-link"})),"\u591a Model travel"),r.a.createElement("p",null,r.a.createElement("code",null,"Dobux")," \u652f\u6301\u4f7f\u7528\u591a Model \u6ce8\u5165\u3002\u901a\u8fc7 devtools \u7684\u5b9e\u4f8b\u7684\u5207\u6362\u9762\u677f\u53ef\u4ee5\u6839\u636e\u8bc9\u6c42\u67e5\u770b\u5bf9\u5e94\u7684 Model \u7684\u72b6\u6001\u6539\u53d8"),r.a.createElement("div",{style:{textAlign:"center"}},r.a.createElement("img",{width:"1000px",src:"/dobux/time-travel-todo-list.gif"})),r.a.createElement("blockquote",null,r.a.createElement("p",null,"\u6ce8\uff1a\u4e3a\u4e86\u51cf\u5c11\u8fc7\u591a\u7684\u5360\u7528 Chrome \u5185\u5b58\uff0c\u5f53\u524d Model \u5bf9\u5e94\u7684\u7ec4\u4ef6\u5378\u8f7d\u7684\u65f6\u5019\u4f1a\u65ad\u5f00\u4e0e devtools \u7684\u8fde\u63a5\uff0c\u5207\u6362\u5230\u65b0\u7684 Model \u540e\u53ef\u80fd\u9700\u8981\u624b\u52a8\u91cd\u65b0\u5f00\u542f\uff08\u5148\u5173\u95ed\u518d\u5f00\u542f\uff09\u5f00\u53d1\u8005\u8c03\u8bd5\u5de5\u5177"))))}},x2v5:function(n){n.exports=JSON.parse("{}")}}]);